#cloud-config

package_update: true
package_upgrade: true

packages:
  - git
  - ufw

write_files:
  # Reconciliation service & timer
  - path: /etc/systemd/system/reconcile.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Run reconciliation script
      Requires=setup-docker-compose.service
      After=setup-docker-compose.service

      [Service]
      Type=oneshot
      ExecStartPre=/bin/mkdir -p /srv/gitops
      ExecStart=/usr/local/bin/reconcile.sh

      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/reconcile.timer
    permissions: '0644'
    content: |
      [Unit]
      Description=Timer for reconciliation script

      [Timer]
      OnBootSec=${boot_delay}
      OnUnitActiveSec=${reconciliation_intervall}
      Persistent=true

      [Install]
      WantedBy=timers.target

  - path: /usr/local/bin/reconcile.sh
    permissions: '0755'
    content: |
      ${indented_reconciliation_script}

  # Limit journald log retention
  - path: /etc/systemd/journald.conf.d/99-limits.conf
    permissions: '0644'
    content: |
      [Journal]
      SystemMaxUse=200M
  
  # Harden baseline image
  - path: /etc/systemd/system/harden.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Disable unneeded baseline services
      After=network.target

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/usr/local/bin/harden.sh

      [Install]
      WantedBy=multi-user.target

  - path: /usr/local/bin/harden.sh
    permissions: '0755'
    content: |
      #!/bin/sh
      set -e
      systemctl disable --now atd.service
      systemctl disable --now acpid.service acpid.socket acpid.path
      systemctl disable --now man-db.timer
      systemctl disable --now apt-daily.timer apt-daily-upgrade.timer unattended-upgrades.service
      systemctl disable --now lvm2-monitor.service lvm2-lvmpolld.socket dm-event.socket mdadm-shutdown.service || true
      systemctl mask unattended-upgrades.service
      systemctl restart systemd-journald

  # Firewall service
  - path: /etc/systemd/system/setup-firewall.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Setup strict firewall rules
      After=network.target
      Before=ufw.service
      Before=reconcile.service

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/usr/local/bin/setup-firewall.sh

      [Install]
      WantedBy=multi-user.target

  - path: /usr/local/bin/setup-firewall.sh
    permissions: '0755'
    content: |
      #!/bin/sh
      set -e
      ufw allow 22/tcp  # TODO! remove once SSH is gone
      ufw allow 80/tcp
      ufw allow 443/tcp
      ufw default deny incoming
      ufw default allow outgoing
      ufw --force enable

  # Docker install
  - path: /etc/systemd/system/setup-docker-compose.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Setup Docker Compose with dependencies
      Before=reconcile.service
      Wants=network-online.target
      After=network-online.target

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/usr/local/bin/setup-docker-compose.sh

      [Install]
      WantedBy=multi-user.target

  - path: /usr/local/bin/setup-docker-compose.sh
    permissions: '0755'
    content: |
      #!/bin/sh
      set -e
      install -m 0755 -d /etc/apt/keyrings
      curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      chmod a+r /etc/apt/keyrings/docker.gpg
      echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
        https://download.docker.com/linux/debian \
        $(lsb_release -cs) stable" \
        > /etc/apt/sources.list.d/docker.list
      apt-get update
      apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
      systemctl enable --now docker

  # Docker prune
  - path: /etc/systemd/system/docker-prune.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Nightly Docker prune
      After=docker.service
      Requires=docker.service

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/docker system prune --force

      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/docker-prune.timer
    permissions: '0644'
    content: |
      [Unit]
      Description=Run nightly docker prune

      [Timer]
      OnCalendar=daily
      RandomizedDelaySec=1h
      Persistent=true

      [Install]
      WantedBy=timers.target

  # TODO! Disable SSH once we have verified the module works
  # SSH removal script
  # - path: /etc/systemd/system/disable-ssh.service
  #   permissions: '0644'
  #   content: |
  #     [Unit]
  #     Description=Disable SSH access
  #     After=network.target

  #     [Service]
  #     Type=oneshot
  #     RemainAfterExit=yes
  #     ExecStart=/usr/local/bin/disable-ssh.sh

  # - path: /usr/local/bin/disable-ssh.sh
  #   permissions: '0755'
  #   content: |
  #     #!/bin/sh
  #     set -e
  #     systemctl disable --now ssh.service

  # Temporary hardening
  - path: /etc/ssh/sshd_config.d/99-temporary-dev.conf
    permissions: '0644'
    content: |
      PermitRootLogin prohibit-password
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      PubkeyAuthentication yes
      AllowAgentForwarding no
      AllowTcpForwarding no
      X11Forwarding no

runcmd:
  - systemctl daemon-reload
  - systemctl start harden.service
  - systemctl start setup-firewall.service
  - systemctl start setup-docker-compose.service
  - systemctl start reconcile.timer
  - systemctl start docker-prune.timer
